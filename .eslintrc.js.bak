/**
 * Canonical ESLint configuration (ESM) for the workersql project.
 * We use a single file (.eslintrc.js) with export default because package.json sets "type":"module".
 * Avoid CommonJS (module.exports / require) to prevent 'module is not defined' errors.
 * We intentionally skip parserOptions.project for faster, non-type-aware linting across tests.
 * Add type-aware rules later via an override + separate tsconfig if needed.
 * @type {import('eslint').Linter.Config}
 */
// Converted to CommonJS to prevent ESLint schema error about __esModule.
// Using module.exports ensures ESLint (which loads config via CJS) sees a plain object.
module.exports = {
	root: true,
	env: {
		browser: true,
		node: true,
		es2022: true
	},
	parser: '@typescript-eslint/parser',
	parserOptions: {
		ecmaVersion: 2022,
		sourceType: 'module'
	},
	plugins: ['@typescript-eslint', 'security'],
	extends: [
		'eslint:recommended',
		'plugin:@typescript-eslint/recommended',
		'plugin:security/recommended',
		'prettier'
	],
	rules: {
		'@typescript-eslint/no-unused-vars': ['error', { argsIgnorePattern: '^_', varsIgnorePattern: '^_' }],
		'@typescript-eslint/no-explicit-any': 'warn',
		'@typescript-eslint/explicit-function-return-type': 'off',
		'@typescript-eslint/no-floating-promises': 'error',
		'no-console': ['warn', { allow: ['warn', 'error'] }],
		'no-debugger': 'error',
		'prefer-const': 'error',
		'no-var': 'error',
		eqeqeq: ['error', 'always'],
		curly: ['error', 'all']
	},
	overrides: [
		{
			files: ['tests/**/*.{ts,tsx}', '**/*.test.ts', '**/*.spec.ts'],
			env: { jest: true },
			rules: {
				'@typescript-eslint/no-explicit-any': 'off',
				'@typescript-eslint/no-unused-vars': 'off',
				'no-console': 'off'
			}
		}
	],
	ignorePatterns: [
		'dist',
		'coverage',
		'sdk/**',
		'.github/instructions/**',
		'*.d.ts',
		'*.d.ts.map',
		'**/*.min.js',
		'**/build/**'
	]
};
